<%= form_with(model: alumnus) do |form| %>
  <% if alumnus.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(alumnus.errors.count, "error") %> prohibited this alumnus from being saved:</h2>

      <ul>
        <% alumnus.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Only allow admin to change the user foreign key -->
  <% if Current.user.is_admin? %>
    <div class="field light-select-container">
      <!-- Change the ID to a dropdown -->
      <%= form.select :user_id, User.where("role_id = 3").order(:last_name).map { |user| [user.first_name + " " + user.last_name + " - " + String(user.graduation_year), user.id] }, include_blank: "User ID", id: "id_of_the_user_id_select_box" %>
    </div>
  <% else %>
    <!-- Just display the name of the user -->
    <h3><%= Current.user.first_name %> <%= Current.user.last_name %></h3>
    <%= form.hidden_field :user_id, value: Current.user.id %>
  <% end %>

  <div class="field">
    <%= form.file_field :image, accept: 'image/png,image/gif,image/jpeg,image/jpg' %>
  </div>

  <div class="field">
    <%= form.text_area :bio, class: "input-light", placeholder: "Bio" %>
  </div>

  <div class="field">
    <%= form.text_field :job_title, class: "input-light", placeholder: "Job Title" %>
  </div>

  <div class="field light-select-container">
    <!-- Changed job_category_id to job_category_name -->
    <%= form.select :job_category_id, JobCategory.order(:name).map { |job_category| [job_category.name, job_category.id] }, include_blank: "Job Category", id: "id_of_the_job_category_id_select_box" %>
  </div>

  <div class="field">
    <%= form.text_field :employer, class: "input-light", placeholder: "Employer" %>
  </div>

  <div class="field">
    <%= form.text_area :availability, class: "input-light", placeholder: "Availability" %>
  </div>

  <div class="actions">
    <%= form.submit "Update Alumni Profile", class: "btn btn-outline-primary" %>
  </div>
<% end %>
